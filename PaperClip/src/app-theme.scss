@import '~@angular/material/theming';
// Plus imports for other components in your app.


// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);
$candy-app-primary: mat-palette($mat-indigo);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);


// Define an alternate dark theme.
$blue-gray-primary: mat-palette($mat-blue-grey);
$blue-gray-accent:  mat-palette($mat-light-blue, A200, A100, A400);
$blue-gray-warn:    mat-palette($mat-red);
$blue-gray-theme:   mat-light-theme($blue-gray-primary, $blue-gray-accent, $blue-gray-warn);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.blue-gray-theme {
  @include angular-material-theme($blue-gray-theme);
}

$pink-primary: mat-palette($mat-pink);
$pink-accent:  mat-palette($mat-indigo, A200, A100, A400);
$pink-warn:   mat-palette($mat-red);
$pink-theme:   mat-light-theme($pink-primary, $pink-accent, $pink-warn);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.pink-theme {
  @include angular-material-theme($pink-theme);
}

$teal-primary: mat-palette($mat-teal);
$teal-accent:  mat-palette($mat-blue, A200, A100, A400);
$teal-warn:   mat-palette($mat-red);
$teal-theme:   mat-light-theme($teal-primary, $teal-accent, $teal-warn);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.teal-theme {
  @include angular-material-theme($teal-theme);
}

